/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 ibot_model.glb --transform
Author: Monhoo (https://sketchfab.com/Monhoo)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/ibot-model-e664372e008d46b480e06cae4a849e99
Title: iBot Model
*/

import React, { useLayoutEffect, useRef } from "react";
import { useGLTF, useScroll } from "@react-three/drei";
import gsap from "gsap";
import { useFrame } from "@react-three/fiber";

export function Robot(props) {
  const { nodes, materials } = useGLTF("./ibot_model-transformed.glb");

  const robot = useRef();
  const scroll = useScroll();
  const tl = useRef();

  useFrame((state, delta) => {
    tl.current.seek(scroll.offset * tl.current.duration());
  });

  useLayoutEffect(() => {
    tl.current = gsap.timeline({
      defaults: { duration: 2, ease: "power1.inOut" },
    });

    tl.current
      .to(robot.current.rotation, { y: -1 }, 2)
      .to(robot.current.position, { x: 1 }, 2)

      .to(robot.current.rotation, { y: 1 }, 6)
      .to(robot.current.position, { x: -1 }, 6)

      .to(robot.current.rotation, { y: 0 }, 11)
      .to(robot.current.rotation, { x: 1 }, 11)
      .to(robot.current.position, { x: 0 }, 11)

      .to(robot.current.rotation, { y: 0 }, 13)
      .to(robot.current.rotation, { x: -1 }, 13)
      .to(robot.current.position, { x: 0 }, 13)

      .to(robot.current.rotation, { y: 0 }, 16)
      .to(robot.current.rotation, { x: 0 }, 16)
      .to(robot.current.position, { x: 0 }, 16)

      .to(robot.current.rotation, { y: 0 }, 20)
      .to(robot.current.rotation, { x: 0 }, 20)
      .to(robot.current.position, { x: 0 }, 20);
  }, []);

  return (
    <group {...props} dispose={null} ref={robot}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <mesh
          geometry={nodes.iBot_Foot_Foot_0.geometry}
          material={materials.Foot}
          position={[0, 0, 11.75]}
          castShadow
        />
      </group>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <mesh
          geometry={nodes.iBot_Arm_Arm_0.geometry}
          material={materials.material}
          position={[0, 0, 11.75]}
          castShadow
        />
      </group>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <mesh
          geometry={nodes.iBot_Body_Body_0.geometry}
          material={materials.Body}
          position={[0, 0, 11.75]}
          castShadow
        />
      </group>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <mesh
          geometry={nodes.iBot_Head_Head_0.geometry}
          material={materials.Head}
          position={[0, 0, 11.75]}
          castShadow
        />
      </group>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <mesh
          geometry={nodes.Object001_Face_0.geometry}
          material={materials.Face}
          position={[0, 0, 11.75]}
          castShadow
        />
      </group>
    </group>
  );
}

useGLTF.preload("./ibot_model-transformed.glb");
